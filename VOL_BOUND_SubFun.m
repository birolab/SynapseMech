function [OUTPUT]=VOL_BOUND_SubFun(SYNAPSE1,SYNAPSE2)

for l=1:numel(SYNAPSE1.VERT)
    
    if ~isempty(SYNAPSE1.VERT{l})
    
MASS{l}=[SYNAPSE1.VERT{l};SYNAPSE2.VERT{l}];

if isfield(SYNAPSE2,'VERT_ALT')
    
MASS_ALT{l}=[SYNAPSE1.VERT{l};SYNAPSE2.VERT_ALT{l}];

OUTPUT.ALPHA_ALT{l} = alphaShape(MASS_ALT{l}(:,1),MASS_ALT{l}(:,2),MASS_ALT{l}(:,3));
OUTPUT.VOL_ENCLOSED_ALPHA_ALT(l)= volume(OUTPUT.ALPHA_ALT{l});


[OUTPUT.BOND_ALT{l},OUTPUT.VOL_ENCLOSED_BOND_ALT(l)]=boundary(MASS_ALT{l});

OUTPUT.MASS_ALT{l}=MASS_ALT{l};

OUTPUT.ALPHA{l} = alphaShape(MASS{l}(:,1),MASS{l}(:,2),MASS{l}(:,3));
OUTPUT.VOL_ENCLOSED_ALPHA(l)= volume(OUTPUT.ALPHA{l});


[OUTPUT.BOND{l},OUTPUT.VOL_ENCLOSED_BOND(l)]=boundary(MASS{l});

OUTPUT.MASS{l}=MASS{l};



else


OUTPUT.ALPHA{l} = alphaShape(MASS{l}(:,1),MASS{l}(:,2),MASS{l}(:,3));
OUTPUT.VOL_ENCLOSED_ALPHA(l)= volume(OUTPUT.ALPHA{l});


[OUTPUT.BOND{l},OUTPUT.VOL_ENCLOSED_BOND(l)]=boundary(MASS{l});

OUTPUT.MASS{l}=MASS{l};
end

    else
        
      OUTPUT.ALPHA_ALT{l}=NaN;  
OUTPUT.VOL_ENCLOSED_ALPHA_ALT(l)=NaN;
OUTPUT.BOND_ALT{l}=NaN;
OUTPUT.VOL_ENCLOSED_BOND_ALT(l)=NaN;
OUTPUT.MASS_ALT{l}=NaN;

OUTPUT.BOND{l}=NaN;
OUTPUT.MASS{l}=NaN;
OUTPUT.VOL_ENCLOSED_ALPHA=NaN;
OUTPUT.VOL_ENCLOSED_BOND=NaN;


end



end